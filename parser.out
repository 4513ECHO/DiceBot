Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> statement
Rule 1     statement -> NAME EQUALS expression
Rule 2     expression -> expression PLUS expression
Rule 3     expression -> expression MINUS expression
Rule 4     expression -> expression TIMES expression
Rule 5     expression -> expression DIVIDE expression
Rule 6     expression -> expression DICE expression
Rule 7     expression -> MINUS expression
Rule 8     expression -> LPAREN expression RPAREN
Rule 9     expression -> NUMBER
Rule 10    expression -> STRING
Rule 11    expression -> NAME
Rule 12    statement -> expression

Terminals, with rules where they appear

DICE                 : 6
DIVIDE               : 5
EQUALS               : 1
LPAREN               : 8
MINUS                : 3 7
NAME                 : 1 11
NUMBER               : 9
PLUS                 : 2
RPAREN               : 8
STRING               : 10
TIMES                : 4
error                : 

Nonterminals, with rules where they appear

expression           : 1 2 2 3 3 4 4 5 5 6 6 7 8 12
statement            : 0

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . NAME EQUALS expression
    (12) statement -> . expression
    (2) expression -> . expression PLUS expression
    (3) expression -> . expression MINUS expression
    (4) expression -> . expression TIMES expression
    (5) expression -> . expression DIVIDE expression
    (6) expression -> . expression DICE expression
    (7) expression -> . MINUS expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . NUMBER
    (10) expression -> . STRING
    (11) expression -> . NAME

    NAME            shift and go to state 5
    MINUS           shift and go to state 4
    LPAREN          shift and go to state 1
    NUMBER          shift and go to state 6
    STRING          shift and go to state 7

    expression                     shift and go to state 3
    statement                      shift and go to state 2

state 1

    (8) expression -> LPAREN . expression RPAREN
    (2) expression -> . expression PLUS expression
    (3) expression -> . expression MINUS expression
    (4) expression -> . expression TIMES expression
    (5) expression -> . expression DIVIDE expression
    (6) expression -> . expression DICE expression
    (7) expression -> . MINUS expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . NUMBER
    (10) expression -> . STRING
    (11) expression -> . NAME

    MINUS           shift and go to state 4
    LPAREN          shift and go to state 1
    NUMBER          shift and go to state 6
    STRING          shift and go to state 7
    NAME            shift and go to state 8

    expression                     shift and go to state 9

state 2

    (0) S' -> statement .



state 3

    (12) statement -> expression .
    (2) expression -> expression . PLUS expression
    (3) expression -> expression . MINUS expression
    (4) expression -> expression . TIMES expression
    (5) expression -> expression . DIVIDE expression
    (6) expression -> expression . DICE expression

    $end            reduce using rule 12 (statement -> expression .)
    PLUS            shift and go to state 12
    MINUS           shift and go to state 11
    TIMES           shift and go to state 14
    DIVIDE          shift and go to state 10
    DICE            shift and go to state 13


state 4

    (7) expression -> MINUS . expression
    (2) expression -> . expression PLUS expression
    (3) expression -> . expression MINUS expression
    (4) expression -> . expression TIMES expression
    (5) expression -> . expression DIVIDE expression
    (6) expression -> . expression DICE expression
    (7) expression -> . MINUS expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . NUMBER
    (10) expression -> . STRING
    (11) expression -> . NAME

    MINUS           shift and go to state 4
    LPAREN          shift and go to state 1
    NUMBER          shift and go to state 6
    STRING          shift and go to state 7
    NAME            shift and go to state 8

    expression                     shift and go to state 15

state 5

    (1) statement -> NAME . EQUALS expression
    (11) expression -> NAME .

    EQUALS          shift and go to state 16
    PLUS            reduce using rule 11 (expression -> NAME .)
    MINUS           reduce using rule 11 (expression -> NAME .)
    TIMES           reduce using rule 11 (expression -> NAME .)
    DIVIDE          reduce using rule 11 (expression -> NAME .)
    DICE            reduce using rule 11 (expression -> NAME .)
    $end            reduce using rule 11 (expression -> NAME .)


state 6

    (9) expression -> NUMBER .

    PLUS            reduce using rule 9 (expression -> NUMBER .)
    MINUS           reduce using rule 9 (expression -> NUMBER .)
    TIMES           reduce using rule 9 (expression -> NUMBER .)
    DIVIDE          reduce using rule 9 (expression -> NUMBER .)
    DICE            reduce using rule 9 (expression -> NUMBER .)
    $end            reduce using rule 9 (expression -> NUMBER .)
    RPAREN          reduce using rule 9 (expression -> NUMBER .)


state 7

    (10) expression -> STRING .

    PLUS            reduce using rule 10 (expression -> STRING .)
    MINUS           reduce using rule 10 (expression -> STRING .)
    TIMES           reduce using rule 10 (expression -> STRING .)
    DIVIDE          reduce using rule 10 (expression -> STRING .)
    DICE            reduce using rule 10 (expression -> STRING .)
    $end            reduce using rule 10 (expression -> STRING .)
    RPAREN          reduce using rule 10 (expression -> STRING .)


state 8

    (11) expression -> NAME .

    PLUS            reduce using rule 11 (expression -> NAME .)
    MINUS           reduce using rule 11 (expression -> NAME .)
    TIMES           reduce using rule 11 (expression -> NAME .)
    DIVIDE          reduce using rule 11 (expression -> NAME .)
    DICE            reduce using rule 11 (expression -> NAME .)
    $end            reduce using rule 11 (expression -> NAME .)
    RPAREN          reduce using rule 11 (expression -> NAME .)


state 9

    (8) expression -> LPAREN expression . RPAREN
    (2) expression -> expression . PLUS expression
    (3) expression -> expression . MINUS expression
    (4) expression -> expression . TIMES expression
    (5) expression -> expression . DIVIDE expression
    (6) expression -> expression . DICE expression

    RPAREN          shift and go to state 17
    PLUS            shift and go to state 12
    MINUS           shift and go to state 11
    TIMES           shift and go to state 14
    DIVIDE          shift and go to state 10
    DICE            shift and go to state 13


state 10

    (5) expression -> expression DIVIDE . expression
    (2) expression -> . expression PLUS expression
    (3) expression -> . expression MINUS expression
    (4) expression -> . expression TIMES expression
    (5) expression -> . expression DIVIDE expression
    (6) expression -> . expression DICE expression
    (7) expression -> . MINUS expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . NUMBER
    (10) expression -> . STRING
    (11) expression -> . NAME

    MINUS           shift and go to state 4
    LPAREN          shift and go to state 1
    NUMBER          shift and go to state 6
    STRING          shift and go to state 7
    NAME            shift and go to state 8

    expression                     shift and go to state 18

state 11

    (3) expression -> expression MINUS . expression
    (2) expression -> . expression PLUS expression
    (3) expression -> . expression MINUS expression
    (4) expression -> . expression TIMES expression
    (5) expression -> . expression DIVIDE expression
    (6) expression -> . expression DICE expression
    (7) expression -> . MINUS expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . NUMBER
    (10) expression -> . STRING
    (11) expression -> . NAME

    MINUS           shift and go to state 4
    LPAREN          shift and go to state 1
    NUMBER          shift and go to state 6
    STRING          shift and go to state 7
    NAME            shift and go to state 8

    expression                     shift and go to state 19

state 12

    (2) expression -> expression PLUS . expression
    (2) expression -> . expression PLUS expression
    (3) expression -> . expression MINUS expression
    (4) expression -> . expression TIMES expression
    (5) expression -> . expression DIVIDE expression
    (6) expression -> . expression DICE expression
    (7) expression -> . MINUS expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . NUMBER
    (10) expression -> . STRING
    (11) expression -> . NAME

    MINUS           shift and go to state 4
    LPAREN          shift and go to state 1
    NUMBER          shift and go to state 6
    STRING          shift and go to state 7
    NAME            shift and go to state 8

    expression                     shift and go to state 20

state 13

    (6) expression -> expression DICE . expression
    (2) expression -> . expression PLUS expression
    (3) expression -> . expression MINUS expression
    (4) expression -> . expression TIMES expression
    (5) expression -> . expression DIVIDE expression
    (6) expression -> . expression DICE expression
    (7) expression -> . MINUS expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . NUMBER
    (10) expression -> . STRING
    (11) expression -> . NAME

    MINUS           shift and go to state 4
    LPAREN          shift and go to state 1
    NUMBER          shift and go to state 6
    STRING          shift and go to state 7
    NAME            shift and go to state 8

    expression                     shift and go to state 21

state 14

    (4) expression -> expression TIMES . expression
    (2) expression -> . expression PLUS expression
    (3) expression -> . expression MINUS expression
    (4) expression -> . expression TIMES expression
    (5) expression -> . expression DIVIDE expression
    (6) expression -> . expression DICE expression
    (7) expression -> . MINUS expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . NUMBER
    (10) expression -> . STRING
    (11) expression -> . NAME

    MINUS           shift and go to state 4
    LPAREN          shift and go to state 1
    NUMBER          shift and go to state 6
    STRING          shift and go to state 7
    NAME            shift and go to state 8

    expression                     shift and go to state 22

state 15

    (7) expression -> MINUS expression .
    (2) expression -> expression . PLUS expression
    (3) expression -> expression . MINUS expression
    (4) expression -> expression . TIMES expression
    (5) expression -> expression . DIVIDE expression
    (6) expression -> expression . DICE expression

    PLUS            reduce using rule 7 (expression -> MINUS expression .)
    MINUS           reduce using rule 7 (expression -> MINUS expression .)
    TIMES           reduce using rule 7 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 7 (expression -> MINUS expression .)
    $end            reduce using rule 7 (expression -> MINUS expression .)
    RPAREN          reduce using rule 7 (expression -> MINUS expression .)
    DICE            shift and go to state 13

  ! DICE            [ reduce using rule 7 (expression -> MINUS expression .) ]
  ! PLUS            [ shift and go to state 12 ]
  ! MINUS           [ shift and go to state 11 ]
  ! TIMES           [ shift and go to state 14 ]
  ! DIVIDE          [ shift and go to state 10 ]


state 16

    (1) statement -> NAME EQUALS . expression
    (2) expression -> . expression PLUS expression
    (3) expression -> . expression MINUS expression
    (4) expression -> . expression TIMES expression
    (5) expression -> . expression DIVIDE expression
    (6) expression -> . expression DICE expression
    (7) expression -> . MINUS expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . NUMBER
    (10) expression -> . STRING
    (11) expression -> . NAME

    MINUS           shift and go to state 4
    LPAREN          shift and go to state 1
    NUMBER          shift and go to state 6
    STRING          shift and go to state 7
    NAME            shift and go to state 8

    expression                     shift and go to state 23

state 17

    (8) expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    DICE            reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 8 (expression -> LPAREN expression RPAREN .)


state 18

    (5) expression -> expression DIVIDE expression .
    (2) expression -> expression . PLUS expression
    (3) expression -> expression . MINUS expression
    (4) expression -> expression . TIMES expression
    (5) expression -> expression . DIVIDE expression
    (6) expression -> expression . DICE expression

    PLUS            reduce using rule 5 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 5 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 5 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 5 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 5 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 5 (expression -> expression DIVIDE expression .)
    DICE            shift and go to state 13

  ! DICE            [ reduce using rule 5 (expression -> expression DIVIDE expression .) ]
  ! PLUS            [ shift and go to state 12 ]
  ! MINUS           [ shift and go to state 11 ]
  ! TIMES           [ shift and go to state 14 ]
  ! DIVIDE          [ shift and go to state 10 ]


state 19

    (3) expression -> expression MINUS expression .
    (2) expression -> expression . PLUS expression
    (3) expression -> expression . MINUS expression
    (4) expression -> expression . TIMES expression
    (5) expression -> expression . DIVIDE expression
    (6) expression -> expression . DICE expression

    PLUS            reduce using rule 3 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 3 (expression -> expression MINUS expression .)
    $end            reduce using rule 3 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 3 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 14
    DIVIDE          shift and go to state 10
    DICE            shift and go to state 13

  ! TIMES           [ reduce using rule 3 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 3 (expression -> expression MINUS expression .) ]
  ! DICE            [ reduce using rule 3 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 12 ]
  ! MINUS           [ shift and go to state 11 ]


state 20

    (2) expression -> expression PLUS expression .
    (2) expression -> expression . PLUS expression
    (3) expression -> expression . MINUS expression
    (4) expression -> expression . TIMES expression
    (5) expression -> expression . DIVIDE expression
    (6) expression -> expression . DICE expression

    PLUS            reduce using rule 2 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 2 (expression -> expression PLUS expression .)
    $end            reduce using rule 2 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 2 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 14
    DIVIDE          shift and go to state 10
    DICE            shift and go to state 13

  ! TIMES           [ reduce using rule 2 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 2 (expression -> expression PLUS expression .) ]
  ! DICE            [ reduce using rule 2 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 12 ]
  ! MINUS           [ shift and go to state 11 ]


state 21

    (6) expression -> expression DICE expression .
    (2) expression -> expression . PLUS expression
    (3) expression -> expression . MINUS expression
    (4) expression -> expression . TIMES expression
    (5) expression -> expression . DIVIDE expression
    (6) expression -> expression . DICE expression

    PLUS            reduce using rule 6 (expression -> expression DICE expression .)
    MINUS           reduce using rule 6 (expression -> expression DICE expression .)
    TIMES           reduce using rule 6 (expression -> expression DICE expression .)
    DIVIDE          reduce using rule 6 (expression -> expression DICE expression .)
    DICE            reduce using rule 6 (expression -> expression DICE expression .)
    $end            reduce using rule 6 (expression -> expression DICE expression .)
    RPAREN          reduce using rule 6 (expression -> expression DICE expression .)

  ! PLUS            [ shift and go to state 12 ]
  ! MINUS           [ shift and go to state 11 ]
  ! TIMES           [ shift and go to state 14 ]
  ! DIVIDE          [ shift and go to state 10 ]
  ! DICE            [ shift and go to state 13 ]


state 22

    (4) expression -> expression TIMES expression .
    (2) expression -> expression . PLUS expression
    (3) expression -> expression . MINUS expression
    (4) expression -> expression . TIMES expression
    (5) expression -> expression . DIVIDE expression
    (6) expression -> expression . DICE expression

    PLUS            reduce using rule 4 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 4 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 4 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 4 (expression -> expression TIMES expression .)
    $end            reduce using rule 4 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 4 (expression -> expression TIMES expression .)
    DICE            shift and go to state 13

  ! DICE            [ reduce using rule 4 (expression -> expression TIMES expression .) ]
  ! PLUS            [ shift and go to state 12 ]
  ! MINUS           [ shift and go to state 11 ]
  ! TIMES           [ shift and go to state 14 ]
  ! DIVIDE          [ shift and go to state 10 ]


state 23

    (1) statement -> NAME EQUALS expression .
    (2) expression -> expression . PLUS expression
    (3) expression -> expression . MINUS expression
    (4) expression -> expression . TIMES expression
    (5) expression -> expression . DIVIDE expression
    (6) expression -> expression . DICE expression

    $end            reduce using rule 1 (statement -> NAME EQUALS expression .)
    PLUS            shift and go to state 12
    MINUS           shift and go to state 11
    TIMES           shift and go to state 14
    DIVIDE          shift and go to state 10
    DICE            shift and go to state 13

